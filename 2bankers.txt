#include<stdio.h> 
#include<conio.h> 
void main(){ 
int i,j,k,m,n,alloc[20][20],max[20][20],avail[20],ind=0,y,flag; 
int finish[10],safe[10],work[20],need[10][20]; 
clrscr(); 
printf("enter the no of processes"); 
scanf("%d",&n); 
printf("enter the no of resources"); 
scanf("%d",&m); 
printf("enter the allocation matrix"); 
for(i=0;i<n;i++){ 
for(j=0;j<m;j++){ 
scanf("%d",&alloc[i][j]); 
} 
} 
printf("enter the maximum matrix"); 
for(i=0;i<n;i++){ 
for(j=0;j<m;j++){ 
scanf("%d",&max[i][j]); 
} 
} 
printf("enter the available matrix"); 
for(i=0;i<m;i++) 
scanf("%d",&avail[i]); 
for(i=0;i<n;i++){ 
for(j=0;j<m;j++){ 
need[i][j]=max[i][j]-alloc[i][j]; 
} 
} 
printf("the need matrix is"); 
 
for(i=0;i<n;i++){ 
for(j=0;j<m;j++){ 
printf("%d",need[i][j]); 
} 
printf("\n"); 
} 
for(i=0;i<m;i++) 
work[i]=avail[i]; 
for(i=0;i<n;i++){ 
finish[i]=0; 
for(k=0;k<n;k++){ 
for(i=0;i<n;i++){ 
if(finish[i]==0){ 
int flag=0; 
for(j=0;j<m;j++){ 
if(need[i][j]>work[j]){ 
flag=1; 
break; 
}} 
if(flag==0){ 
safe[ind++]=i; 
for(y=0;y<m;y++) 
work[y]+=alloc[i][y]; 
finish[i]=1; 
}}}} 
printf("safe sequence is"); 
for(i=0;i<=n;i++) 
printf("P%d",safe[i]); 
printf("\n"); 
getch(); 
} 
} 

OUTPUT:
 
enter the no of processes 5 
enter the no of resources 4 
enter the allocation matrix 0 0 1 2 
                                                 1 0 0 0 
                                                 1 3 5 4 
                                                 0 6 3 2 
                                                 0 0 1 4 
enter the maximum matrix 0 0 1 2 
                                                 1 7 5 0 
                                                 2 3 5 6 
                                                 0 6 5 2 
                                                 0 6 5 6 
enter the available matrix 1 5 2 0 
the need matrix is 0 0 0 0 
                                 0 7 5 0 
                                 1 0 0 2 
                                 0 0 2 0 
                                 0 6 4 2 
safe sequence is P0P2P3P4P1
